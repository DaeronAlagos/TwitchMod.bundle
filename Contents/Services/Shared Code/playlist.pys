# adapted from kodi twitch plugin (plex doesnt let you use certain python functions)
# This takes an m3u8 file with multiple qualities in it and parses it into a dict
#  where the key is the quality name and the value is the url.

HLS_QUALITIES = ["Source","High","Medium","Low","Mobile"]

class M3UPlaylist(object):
        def __init__(self, input):

                self.playlist = {}

                lines = input.splitlines()
                for line in lines:
                        if line.startswith('#EXT-X-MEDIA'):
                                namePosition = line.find('NAME')
                                if namePosition == -1:
                                        return
                                qualityName = ''
                                namePosition += 6 # NAME="
                                while line[namePosition] != '"':
                                        qualityName += line[namePosition]
                                        namePosition += 1
                                try:
                                        url = lines[lines.index(line)+2]
                                except:
                                        url = None
                                self.playlist[qualityName] = url

        #returns selected quality or best match if not available
        def getQuality(self, QualityInt):

                if HLS_QUALITIES[QualityInt] in self.playlist:
                        #selected quality is available
                        return self.playlist[HLS_QUALITIES[QualityInt]]
                else:
                        #not available, start with worst quality and improve
                        #break if better quality is not available
                        bestMatch = len(HLS_QUALITIES) - 1
                        for newMatch in range(bestMatch, -1, -1):
                                if HLS_QUALITIES[newMatch] in self.playlist:
                                        bestMatch = newMatch
                        return self.playlist[HLS_QUALITIES[bestMatch]]

        def __str__(self):
                
                return repr(self.playlist)